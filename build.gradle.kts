/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.3/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation("io.github.jbock-java:jbock:5.16")
    annotationProcessor("io.github.jbock-java:jbock-compiler:5.16")
}

testing {
    suites {
        // Configure the built-in test suite
        val test by getting(JvmTestSuite::class) {
            // Use JUnit Jupiter test framework
            useJUnitJupiter("5.9.3")
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}
tasks.withType<Jar> {
    // include Features.jar in Shelf.jar
    val jarTaskSub = tasks.findByPath(":Features:jar") as Jar
    dependsOn.add(jarTaskSub)
    val featuresJar = jarTaskSub.archiveFile.get()
    from(featuresJar)
}

application {
    // Define the main class for the application.
    mainClass.set("io.github.compendiummc.shelf.App")
    mainModule.set("shelf.app")
    resources
}
